# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ENvjZf3l5YQNosfRhBekCPp2_0DdsBz6
"""

# Commented out IPython magic to ensure Python compatibility.
#importando as bibliotecas necessarias
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline

#uma variavel que recebe o arquivo csv 
arquivo = ('iris.csv')

#lendo o arquivo iris
iris = pd.read_csv(arquivo)

#exibindo as 5 primeiras linhas do arquivo iris
iris.head()

#mostrando as informações de iris
iris.info()

#usando o metodo describe() para descrever as colunas de iris
iris.describe()

#dividindo os dados em treino e teste
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(
                                                    iris.drop('Species',axis=1),
                                                    iris['Species'],
                                                    test_size=0.3
                                                    )

#verificando a forma dos dados x
x_train.shape, x_test.shape

print(x_train)

print(x_test)

#verificando a forma dos dados y
y_train.shape, y_train.shape

print(y_train)

print(y_test)

#instanciando o algoritimo
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=3)

#treinado o meu algoritimo
knn.fit(x_train, y_train)

resultado = knn.predict(x_test)
resultado

#execultando uma nova amostra para fazer um pequeno teste
test = np.array([[5.1, 3.5, 1.4, 0.2]])

knn.predict(test), knn.predict_proba(test)

#validando o nosso modelo com a matrix de confusão
print (
    pd.crosstab(
    y_test,
    resultado, 
    rownames=['Real'], 
    colnames=['          Predito'], 
    margins=True))

from sklearn import metrics

#metrica de validação
print(metrics.classification_report(
                                    y_test, 
                                    resultado, 
                                    target_names=iris['Species'].unique()
                                    ))





